<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Python Tutorial on Tiexin Guo</title><link>https://www.guotiexin.com/categories/python-tutorial/</link><description>Recent content in Python Tutorial on Tiexin Guo</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 26 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.guotiexin.com/categories/python-tutorial/index.xml" rel="self" type="application/rss+xml"/><item><title>Python Tutorial: 12. Putting it All Together - Merge Sort</title><link>https://www.guotiexin.com/posts/python-12-putting-it-all-together-merge-sort/</link><pubDate>Tue, 26 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-12-putting-it-all-together-merge-sort/</guid><description>Now that we finished learning about Python&amp;rsquo;s major quirks and features, let&amp;rsquo;s put it into action. Today, let&amp;rsquo;s see how to write a &amp;ldquo;sort&amp;rdquo; algorithm for lists. 1 Python Built-In Sort Recap As aforementioned in chapter 5 of this tutorial, Python lists have a built-in list.sort() method that modifies the list in-place. There is also a sorted() built-in function that builds a new sorted list from an iterable. sorted() returns</description></item><item><title>Python Tutorial: 11. Virtual Environments and Managing Packages with Pip</title><link>https://www.guotiexin.com/posts/python-11-virtual-env-pip/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-11-virtual-env-pip/</guid><description>Python apps and programs will often use packages and modules that don&amp;rsquo;t come as part of the standard library (stuff that is included in Python). Apps will sometimes need a specific version of a library, because the app may require that a particular bug has been fixed or the app may be written using an obsolete version of the library&amp;rsquo;s interface. This means it may not be possible for one</description></item><item><title>Python Tutorial: 10. Class</title><link>https://www.guotiexin.com/posts/python-10-class/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-10-class/</guid><description>0 OOP and Classes To talk about class, we need to talk about Object-oriented programming (OOP) first. OOP is a programming paradigm based on the concept of &amp;ldquo;objects&amp;rdquo;, which can contain data and code: data in the form of fields (often known as attributes or properties), and code, in the form of procedures (often known as methods). The class provides a way of bundling data and functionality together. Creating a</description></item><item><title>Python Tutorial: 9. Error Handling</title><link>https://www.guotiexin.com/posts/python-09-error-handling/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-09-error-handling/</guid><description>We have only slightly mentioned error messages. If you have tried out some of the code examples yourself, I&amp;rsquo;m pretty sure you&amp;rsquo;ve met a few more errors and exceptions. Today, we will go over errors in general. There are (at least) two distinguishable kinds of errors: syntax errors exceptions 1 Syntax Errors Syntax errors, also known as parsing errors, are caused by incorrect syntax, or grammar. They are perhaps the</description></item><item><title>Python Tutorial: 8. Input and File Handling</title><link>https://www.guotiexin.com/posts/python-08-input-output/</link><pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-08-input-output/</guid><description>There are several ways to present the output of a program; data can be printed in a human-readable form, or written to a file for future use. 1 Output Formatting Often you&amp;rsquo;ll want more control over the formatting of your output than using the print() function which simply prints space-separated values. There are several recommended ways to format output: 1.1 Formatted String Literals (Also called f-strings for short.) Begin a</description></item><item><title>Python Tutorial: 7. Modules - Organizing Code</title><link>https://www.guotiexin.com/posts/python-07-code-organization/</link><pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-07-code-organization/</guid><description>0 Background So far, we&amp;rsquo;ve been coding in the Python interpreter, which if we quit and re-enter, the functions and variables definitions we&amp;rsquo;ve made previously are lost. Therefore, if you want to write a somewhat longer program, you&amp;rsquo;d be better off using a text editor to prepare the input for the interpreter and running it with that file as input instead - which is known as creating a script. As</description></item><item><title>Python Tutorial: 6. Data Structures - Part 2</title><link>https://www.guotiexin.com/posts/python-06-data-structures-2/</link><pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-06-data-structures-2/</guid><description>Now that we&amp;rsquo;ve mastered lists, let&amp;rsquo;s learn two more data structures that could change your world. 1 Sets A set (same as a mathematical set) is an unordered collection with no duplicate elements. Basic uses include membership testing (if something is in a group,) and eliminating duplicate entries (for example, if we convert a list to a set, duplicated items are eliminated because there can be no duplicates in a</description></item><item><title>Python Tutorial: 5. Data Structures</title><link>https://www.guotiexin.com/posts/python-05-data-structures-1/</link><pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-05-data-structures-1/</guid><description>In today&amp;rsquo;s tutorial, we will go over some of the stuff we&amp;rsquo;ve already learned in more detail, and add some more new stuff as well. 1 More on Lists All of the methods of the list objects: list.append(x): add an item to the end of the list. list.extend(iterable): extend the list by appending all the items from the iterable. If you&amp;rsquo;ve forgotten about the iterable, see previous tutorials. list.insert(i, x):</description></item><item><title>Python Tutorial: 4. Functions</title><link>https://www.guotiexin.com/posts/python-04-functions/</link><pubDate>Tue, 12 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-04-functions/</guid><description>1 Defining Functions We can create a function that writes the Fibonacci series to an arbitrary boundary (if you have forgotten about the Fibonacci series, refer to the second tutorial): &amp;gt;&amp;gt;&amp;gt; def fib(n): # write Fibonacci series up to n ... a, b = 0, 1 ... while a &amp;lt; n: ... print(a, end=&amp;#39; &amp;#39;) ... a, b = b, a+b ... print() ... &amp;gt;&amp;gt;&amp;gt; # Now call the function</description></item><item><title>Python Tutorial: 3. Flow Control</title><link>https://www.guotiexin.com/posts/python-03-flow-control/</link><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-03-flow-control/</guid><description>In the previous tutorial, we demonstrated the while statement, which is a &amp;ldquo;flow control&amp;rdquo; statement. In computer programming, control flow or flow of control is the order function calls, instructions, and statements are executed or evaluated when a program is running. In Python (as in most other programming languages,) there are more usual flow control statements than just while. 1 if Statements The most well-known flow control statement probably is</description></item><item><title>Python Tutorial: How to Learn Everything</title><link>https://www.guotiexin.com/posts/python-pandas-excel/</link><pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-pandas-excel/</guid><description>0 How to Learn Everything No matter what you&amp;rsquo;ve already known, chances are, there are still things that you don&amp;rsquo;t know. Learning Python isn&amp;rsquo;t drastically different. We&amp;rsquo;ve already learned quite a few basics in Python, but there is a lot of stuff we don&amp;rsquo;t know yet. Until now. Because today, we will learn &amp;ldquo;how to learn everything,&amp;rdquo; and we will learn by an example, which is to read Excel files</description></item><item><title>Python Tutorial: 2. An Informal Introduction to Python</title><link>https://www.guotiexin.com/posts/python-02-informal-intro/</link><pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-02-informal-intro/</guid><description>To repeat the examples in this tutorial, you must type everything after the prompt (&amp;raquo;&amp;gt;) in the interactive mode, when the prompt appears; lines that do not begin with a prompt are output from the interpreter. Note that a secondary prompt on a line by itself in an example means you must type a blank line; this is used to end a multi-line command. 0 Comments Start the interpreter and</description></item><item><title>Python Tutorial: 1. Getting Started</title><link>https://www.guotiexin.com/posts/python-01-getting-started/</link><pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate><guid>https://www.guotiexin.com/posts/python-01-getting-started/</guid><description>0 Whetting Your Appetite If you do a lot of work on computers, eventually, you will find that there&amp;rsquo;s some task you&amp;rsquo;d like to automate. For example, you may wish to perform a search-and-replace over a large number of text files, or rename and rearrange a bunch of photo files in a complicated way. Python is the language for you. Python is simple to use, but it is a real</description></item></channel></rss>